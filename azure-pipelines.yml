# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ascicdacr'
  imageRepositoryFE: 'fe-nginx'
  imageRepositoryBE-nginx: 'be-nginx'
  imageRepositoryBE-php: 'be-php'
  containerRegistry: 'ascicdacr.azurecr.io'
  dockerfilePath: './frontend/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'ascicdacr-auth'
  env_type: 'prod'
  k8sNamespace: 'azure-pipeline'
  k8sConnection: 'as-cicd-k8s'
  DB_HOST: 'as-cicd-dbserver.mysql.database.azure.com'
  DB_NAME: 'api_db'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build FE image
      inputs:
        command: Build
        repository: $(imageRepositoryFE)
        containerRegistry: $(dockerRegistryServiceConnection)
        dockerfile: $(dockerfilePath)
        arguments: '--build-arg ENV_TYPE=$(env_type)'
        tags: 'latest'
    - task: Docker@2
      displayName: Build BE-nginx image
      inputs:
        command: Build
        repository: $(imageRepositoryBE-nginx)
        containerRegistry: $(dockerRegistryServiceConnection)
        dockerfile: $(dockerfilePath)
        arguments: '--build-arg ENV_TYPE=$(env_type)'
        tags: 'latest'
    - task: Docker@2
      displayName: Build BE-php image
      inputs:
        command: Build
        repository: $(imageRepositoryBE-nginx)
        containerRegistry: $(dockerRegistryServiceConnection)
        dockerfile: $(dockerfilePath)
        arguments: |
          '--build-arg ENV_TYPE=$(env_type) 
           --build-arg DB_USERNAME=$(DB_USERNAME)
           --build-arg DB_PASSWORD=$(DB_PASSWORD)
           --build-arg DB_HOST=$(DB_HOST)
           --build-arg DB_NAME=$(DB_NAME)'
        tags: 'latest'

    - task: Docker@2
      displayName: Push FE image to container registry
      inputs:
        command: Push
        repository: $(imageRepositoryFE)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: 'latest'
    - task: Docker@2
      displayName: Push BE-nginx image to container registry
      inputs:
        command: Push
        repository: $(imageRepositoryBE-nginx)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: 'latest'
    - task: Docker@2
      displayName: Push BE-php image to container registry
      inputs:
        command: Push
        repository: $(imageRepositoryBE-php)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: 'latest'

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              kubernetesServiceConnection: $(k8sConnection)
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespace)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: $(k8sConnection)
              namespace: $(k8sNamespace)
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
                $(Pipeline.Workspace)/manifests/ingress.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepositoryFE):latest
                $(containerRegistry)/$(imageRepositoryBE-nginx):latest
                $(containerRegistry)/$(imageRepositoryBE-php):latest

